<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<!-- 
	==============================================================
	 기존작업에 암호모듈로 패스워드 암호화 하는 작업과 시큐어통신을 처리	 
	===============================================================     
	-->
	<!-- role별로 접근할 수 있는 리소스를 정의하는 작업 -->
	<security:http pattern="/resources/**" security="none" />
	<security:http auto-config="true" use-expressions="true" 
	name="erp" pattern="/erp/**">
		<security:intercept-url pattern="/erp/login"
									access="permitAll"/>
		<security:intercept-url pattern="/erp/**" 
							access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>	
	
		<security:form-login
			username-parameter="mem_id"
			password-parameter="pwd"
			login-page="/erp/login"
		
			default-target-url="/index.do"
			authentication-failure-url="/erp/login?fail=true"
			authentication-success-handler-ref="sucessHandler"
		/>
		<security:logout
			delete-cookies="true"
			logout-success-url="/erp/login"
			logout-url="/erp/logout"
			invalidate-session="true"
		/>
	</security:http>
	<security:http auto-config="true" use-expressions="true"
			 name="cust" >
		<security:intercept-url pattern="/admin/**" 
								access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/member/login"
									access="permitAll"/>
		<security:intercept-url pattern="/member/insert.do"
									access="permitAll"/>							
									
		<security:intercept-url pattern="/index.do" 
							access="permitAll"/>
		<security:intercept-url pattern="/board/list.do" 
							access="permitAll"/>				
		<security:intercept-url pattern="/product/**" 
							access="permitAll"/>						
		<security:intercept-url pattern="/**/user/**"  
						  access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
		<security:intercept-url pattern="/**"  
					access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"
					requires-channel="https"
					/>				  							
		<!-- <security:intercept-url pattern="/**"  
					access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"
					requires-channel="https"
					/> -->
						  
    	<security:port-mappings>
			<security:port-mapping http="8088" https="8443"/>		
		</security:port-mappings>		 		  
		<security:form-login
			username-parameter="mem_id"
			password-parameter="pwd"
			login-page="/member/login"
		
			default-target-url="/index.do"
			authentication-failure-url="/member/login?fail=true"
			authentication-success-handler-ref="sucessHandler"
		/>
<!-- 		<security:form-login
			username-parameter="mem_id"
			password-parameter="pwd"
			login-page="/member/login"
			default-target-url="/index.do"
			authentication-failure-url="/member/login?fail=true"
			authentication-success-handler-ref="sucessHandler"
		/> -->
		<security:logout
			delete-cookies="true"
			logout-success-url="/member/login"
			logout-url="/member/logout"
			invalidate-session="true"
		/>
	</security:http>
	
	<!-- 로그인 성공시에 처리할 일들이 있는 경우 객체 정의 -->
	<bean id="sucessHandler" 
		class="kr.kitri.bigdataShop.member.authentication.LoginSuccessHandler"/>
	<!-- 인증처리를 담당하는 객체가 무엇인지 정의 (테스트용)-->
	<security:authentication-manager>
		<security:authentication-provider ref="customProvider">
		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="customProvider"
	class="kr.kitri.bigdataShop.member.authentication.CustomAuthenticationProvider"/>
	<import resource="spring-config.xml"/> 
</beans>




